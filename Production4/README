Extra Credit 									Richard Cowans
Not Attempted									n01222478
					Project 4
Purpose
This project thread is creating the address lines and the objectCode in order to write them 
to a file like the assembler in school that a assembler would make in through
the sicasm command. This is pass 1 and 2 of a sic/xe program which was required for the
last project for this class. I used two HashTables one to hold the known commands
and the other to old "TEST" file command or basic the pgm before the pgm.lst and pgm.obj.
I hashed the key which is the (instuction) and used the value as a secondary finder for 
some parts of the program.This program show the true purpose of a step by step work out 
of what how the addresses and opcodes are caluclated for each SIC/XE program. A structures 
program like this will make the assembly of a language easier to understand.

-----------------------------------------------------------------------------------------
Source Files:
-----------------------------------------------------------------------------------------
FinalMain.java:the main code that drives the program and pass1.
DataItem.java: the Node class that holds all the values for the hashtable.
HashtableQuad.java: a hashtable that performs both linear and Quadratic but main Linear
		    stores the DataItems in a DataItem array, using hashing.
Makefile: a file that pre compiles all the code due to a command called Make
-----------------------------------------------------------------------------------------
Input Files:
-----------------------------------------------------------------------------------------
SICOP.txt: all the predefined instruction with their hex values in a text file.
	   this is what is going to be used to compare the instruction to the test file.
Testfile.txt: a file that would be used to pass into the assembler to in SIC/XE.
Testfile2.txt: a another file to test the cases in the pass 2 assembler
-----------------------------------------------------------------------------------------
Output:
-----------------------------------------------------------------------------------------
args[0].lst: this outputs the pass 1 and two object into a pretty format of a .lst file
	 for the end user to read and understand
args[0].obj: this is the file that will be loaded into the loader inorder to run the program
-----------------------------------------------------------------------------------------
Executation:
-----------------------------------------------------------------------------------------
Execuation of the program to do pass 2 work
Note:please use my varation of SICOP that way the spacing does not mess up.

Step One: After unshar of the program you will see 3 source files and three input files
Step Two: type make and wait till the test "Everything is Down" before continuting forward
Step Three: perfore the following commands:

		java FinalMain SICOP.txt TestFile.txt

Note:Step Three can be done again with  a dffrent "test fie" just change the name and make 
sure it is located in the directory. In case you would like to test more examples of your own.
Second Note: testFile2.txt is also doable and ready to go
-----------------------------------------------------------------------------------------
